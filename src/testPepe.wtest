import pepe.*

describe "Sueldo Pepe" {

	test "Pepe es cadete, bono resultado de monto fijo 
		y bono presentismo normal. Faltó 3 días" {
		pepe.categoria(cadete)
		pepe.bonoXResultados(montoFijo)
		pepe.bonoXPresentismo(normal)
		pepe.faltas(3)
		assert.equals(20800, pepe.sueldo())
	}

	test "Pepe es gerente, bono resultado por porcentaje 
		y bono presentismo nulo." {
		pepe.categoria(gerente)
		pepe.bonoXResultados(porcentaje)
		pepe.bonoXPresentismo(presentismoNulo)
		assert.equals(16500, pepe.sueldo())
	}

	test "Pepe es cadete, bono resultado por porcentaje 
		y bono presentismo normal. Nunca faltó" {
		pepe.categoria(cadete)
		pepe.bonoXResultados(porcentaje)
		pepe.bonoXPresentismo(normal)
		pepe.faltas(0)
		assert.equals(24000, pepe.sueldo())
	}

	test "Pepe es cadete, bono resultado por porcentaje 
		y bono presentismo normal. Faltó 1 día" {
		pepe.categoria(cadete)
		pepe.bonoXResultados(porcentaje)
		pepe.bonoXPresentismo(normal)
		pepe.faltas(1)
		assert.equals(23000, pepe.sueldo())
	}

//test Bonus
	test "la categoria base de 'medio tiempo' es cadete, Pepe tiene 
categoría medio tiempo, tiene bono resultado de porcentaje y bono 
presentismo demagógico. Falta una vez. Roque tiene bono resultado monto
fijo. Ernesto tiene de compañero a Pepe, y bono presentismo por ajuste." {
		medioTiempo.categoriaBase(cadete)
		pepe.categoria(medioTiempo)
		pepe.bonoXResultados(porcentaje)
		pepe.bonoXPresentismo(demagogico)
		pepe.faltas(1)
		roque.bonoXResultados(montoFijo)
		ernesto.companeroDeErnesto(pepe)
		ernesto.bonoXPresentismo(ajuste)
		ernesto.faltas(0)
		assert.equals(11500, pepe.sueldo())
		assert.equals(37800, roque.sueldo())
		assert.equals(10100, ernesto.sueldo())
	}

}

